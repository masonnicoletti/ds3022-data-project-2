{"timestamp":"2025-10-29T22:05:58.789471","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-10-29T22:05:58.789878","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/airflow-dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-10-29T22:05:58.897177Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-10-29T22:05:58.897409Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-10-29T22:05:58.897580Z","level":"info","event":"Current task name:create_api_url","chan":"stdout","logger":"task"}
{"timestamp":"2025-10-29T22:05:58.897696Z","level":"info","event":"Dag name:dp2_quote_assembler","chan":"stdout","logger":"task"}
{"timestamp":"2025-10-29T22:05:58.897810Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-10-29T22:05:58.897900Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-10-29T22:05:58.897991Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): create_api_url>","chan":"stdout","logger":"task"}
{"timestamp":"2025-10-29T22:05:58.851895","level":"info","event":"Done. Returned value was: https://j9y2xa0vx0.execute-api.us-east-1.amazonaws.com/api/scatter/cxx6sw","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-10-29T22:05:58.852026","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019a3201-9ec9-768c-b716-1d0afdeb8b86'), task_id='create_api_url', dag_id='dp2_quote_assembler', run_id='scheduled__2025-10-29T22:00:00+00:00', try_number=1, map_index=-1, hostname='58e8a993ecd1', context_carrier={}, task=<Task(_PythonDecoratedOperator): create_api_url>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 29, 22, 5, 58, 467349, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
